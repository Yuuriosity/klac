#+begin_src agda2

module homework.Day1 where

open import Prelude
open import Day1

#+end_src

* –ó–∞–¥–∞—á–∞ 1 (‚òÖ)
–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –±—É–ª–µ–≤—É –∫–æ–Ω—ä—é–Ω–∫—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É—è –ø–∞—Ç—Ç–µ—Ä–Ω –º–∞—Ç—á–∏–Ω–≥ —Å—Ä–∞–∑—É –ø–æ –æ–±–æ–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º.
–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ "–∏—Å–∫–ª—é—á–∞—é—â–µ–µ –∏–ª–∏" –Ω–∞ –±—É–ª–µ–≤–æ–º —Ç–∏–ø–µ.
#+begin_src agda2

_&&'_ : ùîπ ‚Üí ùîπ ‚Üí ùîπ
true &&' true = true
_ &&' _ = false

_xor_ : ùîπ ‚Üí ùîπ ‚Üí ùîπ
true xor true = false
false xor false = false
_ xor _ = true

-- —Ç–µ–æ—Ä–µ–º—É/—Ñ—É–Ω–∫—Ü–∏—é/–∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –º–æ–∂–Ω–æ –Ω–∞–∑–≤–∞—Ç—å "_", –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –µ—ë –±–æ–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
-- —ç—Ç–æ —É–¥–æ–±–Ω–æ, —á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –±–µ–∑—ã–º—è–Ω–Ω—ã–µ —é–Ω–∏—Ç-—Ç–µ—Å—Ç—ã

_ : true &&' true ‚â° true
_ = refl _

_ : false &&' true ‚â° false
_ = refl _

_ : false xor true ‚â° true
_ = refl _

_ : true xor true ‚â° false
_ = refl _

#+end_src

* –ó–∞–¥–∞—á–∞ 2 (‚òÖ)
–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å –∏ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª.
#+begin_src agda2

_^_ : ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï
n ^ zero = suc zero
n ^ (suc m) = n * (n ^ m)

_ : 3 ^ 4 ‚â° 81
_ = refl 81

_! : ‚Ñï ‚Üí ‚Ñï
zero ! = 1
(suc n) ! = suc n * n !

_ : 4 ! ‚â° 24
_ = refl 24

#+end_src

* –ó–∞–¥–∞—á–∞ 3 (‚òÖ)
–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –º–∏–Ω–∏–º—É–º–∞ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏.
#+begin_src agda2

max : ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï
max zero    m       = m
max (suc m) zero    = suc m
max (suc m) (suc n) = suc (max m n)


min : ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï
min zero m = zero
min m zero = zero
min (suc m) (suc n) = suc (min m n)

_ : min 5 3 ‚â° 3
_ = refl 3

#+end_src

* –ó–∞–¥–∞—á–∞ 4 (‚òÖ)
–ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏. –û–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–º /—Ç–∞–≤—Ç–æ–ª–æ–≥–∏—è–º/ –∏–∑ –ª–æ–≥–∏–∫–∏, –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã –Ω–∞ –≤–∏–∫–∏–ø–µ–¥–∏–∏,
—á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–º.

#+begin_src agda2

id : {A : ùì§‚ÇÄ} ‚Üí
     A ‚Üí A
id x = x

const : {A B : ùì§‚ÇÄ} ‚Üí
    A ‚Üí (B ‚áí A)
const x y = x

‚ä•-is-false : ¬¨ ‚ä•
‚ä•-is-false = id

-- –ö–∞–∫ –≤—ã –¥—É–º–∞–µ—Ç–µ, —á–µ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞?
contra : {A B : ùì§‚ÇÄ} ‚Üí
         (A ‚áí B) ‚áî (¬¨ B ‚áí ¬¨ A)
contra = (Œª x x‚ÇÅ x‚ÇÇ ‚Üí x‚ÇÅ (x x‚ÇÇ)) , (Œª x x‚ÇÅ ‚Üí {! x !})

not-both : {A : ùì§‚ÇÄ} ‚Üí
           ¬¨ (A ‚àß ¬¨ A)
not-both (fst‚ÇÅ , snd‚ÇÅ) = snd‚ÇÅ fst‚ÇÅ

#+end_src

* –ó–∞–¥–∞—á–∞ 5 (‚òÖ)
–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é ~map~ –Ω–∞ —Å–ø–∏—Å–∫–∞—Ö. ~map f xs~ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é ~f~ –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
—Å–ø–∏—Å–∫–∞ ~xs~ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —Å–ø–∏—Å–æ–∫.

#+begin_src agda2

map : {A B : Type‚ÇÄ} ‚Üí (A ‚Üí B) ‚Üí List A ‚Üí List B
map f [] = []
map f (x ‚à∑ xs) = f x ‚à∑ map f xs

_ : map (_+ 3) (1 ‚à∑ 2 ‚à∑ 3 ‚à∑ []) ‚â° 4 ‚à∑ 5 ‚à∑ 6 ‚à∑ []
_ = refl _

#+end_src

* –ó–∞–¥–∞—á–∞ 6 (‚òÖ‚òÖ)
–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é ~filter~ –Ω–∞ —Å–ø–∏—Å–∫–∞—Ö. ~filter~ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –±—É–ª–µ–≤ –ø—Ä–µ–¥–∏–∫–∞—Ç ~p : A ‚Üí Bool~ –∏ —Å–ø–∏—Å–æ–∫ ~xs~,
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫, —Å–æ—Å—Ç–æ—è—â–∏—Ö —Ç–æ–ª—å–∫–æ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏—Ö –ø—Ä–µ–¥–∏–∫–∞—Ç—É.

#+begin_src agda2

filter : {A : Type‚ÇÄ} (p : A ‚Üí ùîπ) ‚Üí List A ‚Üí List A
filter p [] = []
filter p (x ‚à∑ xs) = let fxs = filter p xs in
                    if p x then x ‚à∑ fxs else fxs

is-non-zero : ‚Ñï ‚Üí ùîπ
is-non-zero zero    = false
is-non-zero (suc _) = true

filter-example : filter is-non-zero (4 ‚à∑ 3 ‚à∑ 0 ‚à∑ 1 ‚à∑ 0 ‚à∑ []) ‚â° 4 ‚à∑ 3 ‚à∑ 1 ‚à∑ []
filter-example = refl _

#+end_src

* –ó–∞–¥–∞—á–∞ 7 (‚òÖ‚òÖ‚òÖ‚òÖ)
–ú—ã –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –ø—É—Å—Ç–æ–π —Ç–∏–ø ~‚ä•~, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ª–æ–∂–Ω—ã–º –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è–º –≤ –ª–æ–≥–∏–∫–µ, —Ç.–∫. —É –Ω–µ–≥–æ –Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤).
–ë—ã–≤–∞—é—Ç –ª–∏ –¥—Ä—É–≥–∏–µ –ø—É—Å—Ç—ã–µ —Ç–∏–ø—ã? –ï—Å–ª–∏ –¥–∞, –ø—Ä–∏–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä.

data Void : Type‚ÇÄ ‚Üí Type‚ÇÄ where
    Void : Void Void
